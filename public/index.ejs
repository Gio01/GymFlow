<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>GymFlow</title>
  <link rel="stylesheet" href="./styles/index.css"> 
  <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
 </head>
<body>
  <script src="https://kit.fontawesome.com/b99e675b6e.js"></script>

  <div class="wrapper" style="display:flex; flex-direction:column;">
    <div class="top_navbar">
      <div class="hamburger">
        <div class="one"></div>
        <div class="two"></div>
        <div class="three"></div>
      </div>
      <div class="top_menu">
        <div class="logo">
          <p>GymFlow</p>
          <!--<img src="/img/GymFlow.jpg" alt=" GymFlow">-->
        </div>
        <ul>
          <li>
           <!-- <a href="/gymflow-47c9b/us-central1/api/login" display="none">
            </a>-->
              <a href="/gymflow-47c9b/us-central1/api/login" display="none">
                   <i class="fas fa-user"></i>
            </a>
          </li>
          <li>
            <a href="#" class="logged-in" display="none" id="logout">
              <i class="fas fa-sign-out-alt"></i>
            </a>
          </li>
        </ul>
      </div>
    </div>
<div class= "main">
    <div class="sidebar">
      <ul style="position: sticky; top:0;">
        <li>
          <!--<a href="/api">-->
          <a href="/gymflow-47c9b/us-central1/api/" display="none">
            <span class=" icon"><i class="fas fa-home"></i></span>
            <span class="title">Home</span>
          </a>
        </li>
        <li>
          <!--<a href="/api/fitness">-->
          <a href="/gymflow-47c9b/us-central1/api/fitness" display="none" class="logged-in">
            <span class="icon"><i class="fas fa-dumbbell"></i></span>
            <span class="title">Fitness</span>
          </a>
        </li>
        <li class="logged-in">
          <!--<a href="/api/contact">-->
          <a href="/gymflow-47c9b/us-central1/api/profile">
            <span class="icon"><i class="fas fa-id-card"></i></span>
            <span class="title">Profile</span>
          </a>
        </li>
        <li>
          <!--<a href="/api/contact">-->
          <a href="/gymflow-47c9b/us-central1/api/contact" display="none">
            <span class="icon"><i class="fas fa-address-book"></i></span>
            <span class="title">Contact</span>
          </a>
        </li>
      </ul>
    </div>
  </div>
    <div class="main_container">
      <img
        src="https://images.unsplash.com/photo-1551980913-630eafe3eb05?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80"
        alt="Gym" style="width: 80%; height: 20em; margin-left: 7em;" />
      <br>
      <br>
      <div class="item">
        <h1>Purpose & Functionality</h1>
        <br />
        <p>
          GymFlow is a fitness web application for users to track their
          workouts, caloric intake, and body weight by inputting data such as
          exercises and weights used. This data will be recorded and stored in
          a database. Every user will be able to create an account with their
          own personalized data. The user will be able to see their data using
          graphs to allow the user to visualize their progress over time. If
          the user decides to track their daily calorie intake, then they
          should be able to search specific foods by name and find its
          nutritional facts. The user will be able to record their weight to
          see overall progress in weight loss or gain. The nutritional facts
          associated with the food will come from a Food & Nutrition Database
          so that users have an accurate estimate of the calories consumed
          within a day. The purpose of GymFlow is to provide a web application
          that is easy to use and motivates users to continue their fitness
          journey.
        </p>
      </div>
      <div class="item">
        <h1>Fitness</h1>
        <br />
        <p>
          The user will be able to create an account and upload information
          such as exercises, weights used at the gym, and caloric intake which
          will all be stored into Firebase. For the caloric intake, the user
          will be able to search certain foods and be able to see nutritional
          facts about the foods, and also be able to store the foods they ate
          into the database where they have a record of their daily caloric
          consumption.
        </p>
        <br>
        <img src="https://platform.fatsecret.com/api/static/images/jsapi/searchresultgrey.jpg" alt="Macros"
          style="height: 200px; width: 250px; margin-left: 25em;" />
      </div>

      <div class="item">
        <h1>Charts</h1>
        <br />
        <p>
          through their database and then be able to store the foodâ€™s
          nutritional facts into my database. Once the user data has been
          stored into the database, the user will be able to see their data in
          a graphical representation through the use of Chartist.js or
          Chart.js which have nice graphical presentations for users to see
          their progress over time
        </p>
        <br>
        <img src="http://doctorscotthealth.com/wp-content/uploads/2013/11/Macronutrient-Ratio-For-Fat-Loss-268x300.jpg"
          alt="Macros" style="height: 200px; width: 200px; margin-left: 12em;" />
        <img src="https://miro.medium.com/max/2578/1*r1Swaq6ARa6uD83k85mkFA.png" alt="Weight Loss"
          style="height: 200px; width: 300px; margin-left: 12em;" />
      </div>
      <div class="item">
        <h1>User Reviews</h1>
        <br>
        <p>"I like the color scheme and the organization of the website. It 
          looks professional and aesthetically pleasing." -- Sergio DePauw</p>
          <br>
          <p>"I love the fact that this service allows me to track my progress through graphs/charts and
            allows me to see the data of my progress which many platforms lack. Additionally, having nutritional labels
            makes it easy to find with a click of a search button. It is super helpful in tracking my calories and the essentials like protein,
            carbs, fat and sugar. Overall great layout and easy to follow and would most definitely recommend to my friends!!"
            -- Johnny Bonilla
          </p>
          <br>
          <p>
            
          </p>
      </div>

      <div class="item">
        <div class="profile-data"></div>
      </div>
    </div>
  </div>
  </div>


 
 <script src="./scripts/hamburger.js"> </script>
  <!-- The core Firebase JS SDK is always required and must be listed first -->
  <script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-firestore.js"></script>

  <!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
  <script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-analytics.js"></script>

  <script>
    // Your web app's Firebase configuration
    var firebaseConfig = {
     
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    // firebase.analytics();

    const auth = firebase.auth();
    const db = firebase.firestore();

    auth.onAuthStateChanged(user => {
      //if user is logged in then show data & if not then don't show anything

      if (user) {
        console.log('user is signed in');
        setupUI(user)

      } else {
        console.log('user is signed out');
        setupUI();
      }

    });

    //logout method
    const logout = document.querySelector("#logout");
    logout.addEventListener('click', (e) => {
      e.preventDefault();
      auth.signOut().then(() => {
        console.log("User Logged Out!");
      });
    })
    const loggedOutLinks = document.querySelectorAll('.logged-out');
    const loggedInLinks = document.querySelectorAll('.logged-in');
    const profileData = document.querySelector('.profile-data')
    const setupUI = user => {
      if (user) {
        const html = `<div> Logged in as ${user.email}</div>`;
        profileData.innerHTML = html;  // we are assigng the value of profile to be the html variable
        console.log(html);
        //toggle UI elements
        loggedInLinks.forEach(item => {
          item.style.display = 'block'
        });
        loggedOutLinks.forEach(item => {
          item.style.display = 'none'
        })
      } else {
        profileData.innerHTML = '';
        loggedInLinks.forEach(item => {
          item.style.display = 'none'
        });
        loggedOutLinks.forEach(item => {
          item.style.display = 'block'
        })
      }
    };

  </script>

</body>

</html>
